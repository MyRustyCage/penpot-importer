penpot.ui.open("Website Importer","./penpot-importer/",{width:400,height:500});penpot.ui.onMessage(t=>{if(t.type==="import-website"){const a=t.data;if(!a)return;try{W(a),penpot.ui.sendMessage({type:"import-success"})}catch(o){penpot.ui.sendMessage({type:"import-error",error:o instanceof Error?o.message:"Unknown error"})}}});function S(t){return!!(t.text&&t.text.trim().length>0||t.styles.backgroundColor!=="rgba(0, 0, 0, 0)"||t.styles.backgroundImage!=="none"||t.styles.boxShadow!=="none"||t.styles.borderRadius!=="0px"&&parseInt(t.styles.borderRadius)>0||["img","svg","button","a","input","textarea","video"].includes(t.tag)||t.src)}function C(t){var r;const a=[];function o(s){s&&(S(s)&&a.push(s),s.children&&s.children.forEach(n=>o(n)))}return o(t.structure.nav),o(t.structure.header),o(t.structure.main),(r=t.structure.sections)==null||r.forEach(s=>o(s)),o(t.structure.footer),a}function w(t){let a=0,o=0;return t.forEach(r=>{const s=r.geometry.x+r.geometry.width,n=r.geometry.y+r.geometry.height;s>a&&(a=s),n>o&&(o=n)}),{width:Math.max(a,1920),height:Math.max(o,1080)}}function d(t){const a=t.match(/rgba?\((\d+),\s*(\d+),\s*(\d+)(?:,\s*[\d.]+)?\)/);if(a){const r=parseInt(a[1]).toString(16).padStart(2,"0"),s=parseInt(a[2]).toString(16).padStart(2,"0"),n=parseInt(a[3]).toString(16).padStart(2,"0");return`#${r}${s}${n}`}const o=t.match(/rgb\((\d+),\s*(\d+),\s*(\d+)\)/);if(o){const r=parseInt(o[1]).toString(16).padStart(2,"0"),s=parseInt(o[2]).toString(16).padStart(2,"0"),n=parseInt(o[3]).toString(16).padStart(2,"0");return`#${r}${s}${n}`}return t}function z(t){const a=t.match(/linear-gradient\(([^)]+)\)/);if(a){const r=a[1];let s=180;const n=r.match(/(\d+)deg/);n&&(s=parseInt(n[1]));const e=r.match(/(?:rgb\([^)]+\)|rgba\([^)]+\)|hsl\([^)]+\)|hsla\([^)]+\)|#[0-9a-fA-F]{3,8})/g);if(!e||e.length<2)return null;const i=(s-90)*(Math.PI/180),c=.5,l=.5,g=.5,f=c+Math.cos(i)*g,h=l+Math.sin(i)*g,p=c-Math.cos(i)*g,y=l-Math.sin(i)*g,b=e.map((x,F)=>{const I=F/(e.length-1);return{color:d(x),offset:I,opacity:1}});return{type:"linear",startX:p,startY:y,endX:f,endY:h,width:1,stops:b}}const o=t.match(/radial-gradient\(([^)]+)\)/);if(o){const s=o[1].match(/(?:rgb\([^)]+\)|rgba\([^)]+\)|hsl\([^)]+\)|hsla\([^)]+\)|#[0-9a-fA-F]{3,8})/g);return!s||s.length<2?null:{type:"radial",startX:.5,startY:.5,endX:1,endY:.5,width:1,stops:s.map((e,i)=>{const c=i/(s.length-1);return{color:d(e),offset:c,opacity:1}})}}return null}function M(t){const a=t.split(",")[0].replace(/["']/g,"").trim();if(a.startsWith("__")||a.includes("_")){const o=a.match(/__([A-Za-z]+)_/);return o?o[1]:"Work Sans"}return a||"Work Sans"}function E(t){const a=parseInt(t);return a<=400?"400":a>=700?"700":"400"}function u(t){if(t.id&&t.id.trim().length>0)return t.id;if(t.text&&t.text.length>0&&t.text.length<30)return`${t.tag}: ${t.text.substring(0,20)}`;if(t.class&&typeof t.class=="string"&&t.class.length>0)try{const a=t.class.split(" ")[0];return`${t.tag}.${a}`}catch{return t.tag}return t.tag}function k(t){const a=t.styles.zIndex&&t.styles.zIndex!=="auto"?parseInt(t.styles.zIndex):0;if(t.tag==="svg"){const r=penpot.createRectangle();if(r)return r.x=t.geometry.x,r.y=t.geometry.y,r.resize(t.geometry.width,t.geometry.height),r.name=`${u(t)} [SVG]`,r.fills=[{fillColor:"#FFD700",fillOpacity:.3}],console.log("Created SVG placeholder:",t.id),{element:r,isText:!1,zIndex:a}}if(t.text&&t.text.trim().length>0){const r=penpot.createText(t.text);if(r){r.x=t.geometry.x,r.y=t.geometry.y,r.resize(t.geometry.width,t.geometry.height),r.name=u(t);const s=parseInt(t.styles.fontSize);!isNaN(s)&&s>0&&(r.fontSize=s.toString());try{r.fontFamily=M(t.styles.fontFamily)}catch{r.fontFamily="Work Sans"}if(t.styles.fontWeight)try{r.fontWeight=E(t.styles.fontWeight)}catch{r.fontWeight="400"}try{const n=d(t.styles.color);n&&n!=="rgba(0, 0, 0, 0)"?r.fills=[{fillColor:n,fillOpacity:1}]:r.fills=[{fillColor:"#FFFFFF",fillOpacity:1}]}catch{r.fills=[{fillColor:"#FFFFFF",fillOpacity:1}]}return{element:r,isText:!0,zIndex:a}}return null}const o=penpot.createRectangle();if(o){if(o.x=t.geometry.x,o.y=t.geometry.y,o.resize(t.geometry.width,t.geometry.height),o.name=u(t),t.styles.backgroundImage&&(t.styles.backgroundImage.includes("gradient")||t.styles.backgroundImage.includes("-gradient"))){console.log("Found gradient element:",t.id),console.log("Background image:",t.styles.backgroundImage);const r=z(t.styles.backgroundImage);if(r){console.log("Parsed gradient:",r);try{return o.fills=[{fillColorGradient:r}],console.log("✓ Gradient applied successfully"),{element:o,isText:!1,zIndex:a}}catch(s){console.error("✗ Gradient fill failed:",s)}}else console.warn("Failed to parse gradient")}if(t.styles.backgroundColor&&t.styles.backgroundColor!=="rgba(0, 0, 0, 0)"){const r=d(t.styles.backgroundColor),s=parseFloat(t.styles.opacity)||1;o.fills=[{fillColor:r,fillOpacity:s}]}if(t.styles.borderRadius&&t.styles.borderRadius!=="0px"){const r=parseInt(t.styles.borderRadius);!isNaN(r)&&r>0&&(o.borderRadius=r)}return{element:o,isText:!1,zIndex:a}}return null}function W(t){if(!penpot.currentPage)throw new Error("No active page found");const o=C(t),r=w(o),s=penpot.createBoard();if(!s)throw new Error("Failed to create board");s.name=t.metadata.title||"Imported Website",s.resize(r.width,r.height),s.x=0,s.y=0;const n=[],e=50;for(let i=0;i<o.length;i+=e)o.slice(i,i+e).forEach(l=>{const g=k(l);g&&n.push(g)});n.sort((i,c)=>i.isText!==c.isText?i.isText?1:-1:i.zIndex-c.zIndex),n.forEach(i=>s.appendChild(i.element)),penpot.selection=[s]}
