penpot.ui.open("Website Importer","https://myrustycage.github.io/penpot-importer/",{width:400,height:500});penpot.ui.onMessage(t=>{if(t.type==="import-website"){const o=t.data;if(!o)return;try{k(o),penpot.ui.sendMessage({type:"import-success"})}catch(e){penpot.ui.sendMessage({type:"import-error",error:e instanceof Error?e.message:"Unknown error"})}}});function b(t){return!!(t.text&&t.text.trim().length>0||t.styles.backgroundColor!=="rgba(0, 0, 0, 0)"||t.styles.backgroundImage!=="none"||t.styles.boxShadow!=="none"||t.styles.borderRadius!=="0px"&&parseInt(t.styles.borderRadius)>0||["img","svg","button","a","input","textarea","video"].includes(t.tag)||t.src)}function F(t){var r;const o=[];function e(s){s&&(b(s)&&o.push(s),s.children&&s.children.forEach(n=>e(n)))}return e(t.structure.nav),e(t.structure.header),e(t.structure.main),(r=t.structure.sections)==null||r.forEach(s=>e(s)),e(t.structure.footer),o}function S(t){let o=0,e=0;return t.forEach(r=>{const s=r.geometry.x+r.geometry.width,n=r.geometry.y+r.geometry.height;s>o&&(o=s),n>e&&(e=n)}),{width:Math.max(o,1920),height:Math.max(e,1080)}}function h(t){const o=t.match(/rgba?\((\d+),\s*(\d+),\s*(\d+)(?:,\s*[\d.]+)?\)/);if(o){const r=parseInt(o[1]).toString(16).padStart(2,"0"),s=parseInt(o[2]).toString(16).padStart(2,"0"),n=parseInt(o[3]).toString(16).padStart(2,"0");return`#${r}${s}${n}`}const e=t.match(/rgb\((\d+),\s*(\d+),\s*(\d+)\)/);if(e){const r=parseInt(e[1]).toString(16).padStart(2,"0"),s=parseInt(e[2]).toString(16).padStart(2,"0"),n=parseInt(e[3]).toString(16).padStart(2,"0");return`#${r}${s}${n}`}return t}function C(t){const o=t.match(/rgba\(\d+,\s*\d+,\s*\d+,\s*([\d.]+)\)/);return o?parseFloat(o[1]):1}function x(t){const o=t.match(/(rgba?\([^)]+\)|hsla?\([^)]+\)|#[0-9a-fA-F]{3,8})/);if(!o)return null;const e=h(o[1]),r=C(o[1]),s=t.match(/(\d+(?:\.\d+)?)%/),n=s?parseFloat(s[1])/100:null;return{color:e,offset:n,opacity:r}}function E(t){console.log("Parsing gradient:",t);const o=/linear-gradient\(/,e=/radial-gradient\(/;let r=-1,s=!1;if(o.test(t))r=t.indexOf("linear-gradient(")+16,s=!0;else if(e.test(t))r=t.indexOf("radial-gradient(")+16,s=!1;else return console.log("No gradient found"),null;let n=1,u=r;for(let i=r;i<t.length;i++)if(t[i]==="("&&n++,t[i]===")"&&n--,n===0){u=i;break}let a=t.substring(r,u);console.log("Content after extraction:",a);let l=180;if(s)if(a.match(/^\d+deg/)){const i=a.match(/^(\d+)deg/);l=parseInt(i[1]),a=a.replace(/^\d+deg,\s*/,"")}else a.startsWith("to right")?(l=90,a=a.replace(/^to right,\s*/,"")):a.startsWith("to left")?(l=270,a=a.replace(/^to left,\s*/,"")):a.startsWith("to top")?(l=0,a=a.replace(/^to top,\s*/,"")):a.startsWith("to bottom")&&(l=180,a=a.replace(/^to bottom,\s*/,""));if(!s){const i=a.match(/^[^,]+,\s*/);i&&(a=a.substring(i[0].length))}console.log("Content after cleanup:",a);const c=[];let g=0,d="";for(let i=0;i<a.length;i++){const f=a[i];if(f==="("&&g++,f===")"&&g--,f===","&&g===0){if(d.trim()){const y=x(d.trim());y&&c.push(y)}d=""}else d+=f}if(d.trim()){const i=x(d.trim());i&&c.push(i)}if(console.log("Parsed stops:",c),c.length<2)return console.log("Not enough color stops"),null;if(c.every(i=>i.offset===null||i.offset===0))c.forEach((i,f)=>{i.offset=f/(c.length-1)});else for(let i=0;i<c.length;i++)c[i].offset===null&&(c[i].offset=i/(c.length-1));if(s){const i=(l-90)*(Math.PI/180);return{type:"linear",startX:.5-Math.cos(i)*.5,startY:.5-Math.sin(i)*.5,endX:.5+Math.cos(i)*.5,endY:.5+Math.sin(i)*.5,width:1,stops:c.map(f=>({color:f.color,offset:f.offset,opacity:f.opacity}))}}else return{type:"radial",startX:.5,startY:.5,endX:1,endY:.5,width:1,stops:c.map(i=>({color:i.color,offset:i.offset,opacity:i.opacity}))}}function I(t){const o=t.split(",")[0].replace(/["']/g,"").trim();if(o.startsWith("__")||o.includes("_")){const e=o.match(/__([A-Za-z]+)_/);return e?e[1]:"Work Sans"}return o||"Work Sans"}function W(t){const o=parseInt(t);return o<=400?"400":o>=700?"700":"400"}function p(t){if(t.id&&t.id.trim().length>0)return t.id;if(t.text&&t.text.length>0&&t.text.length<30)return`${t.tag}: ${t.text.substring(0,20)}`;if(t.class&&typeof t.class=="string"&&t.class.length>0)try{const o=t.class.split(" ")[0];return`${t.tag}.${o}`}catch{return t.tag}return t.tag}function z(t){const o=t.styles.zIndex&&t.styles.zIndex!=="auto"?parseInt(t.styles.zIndex):0;if(t.tag==="svg"){const r=penpot.createRectangle();if(r){if(r.x=t.geometry.x,r.y=t.geometry.y,r.resize(t.geometry.width,t.geometry.height),r.name=`${p(t)} [SVG]`,t.svgDataUrl)try{console.log("Attempting to import SVG as image:",t.id),r.fills=[{fillImage:{dataUrl:t.svgDataUrl,keepAspectRatio:!0}}],console.log("✓ SVG imported as image successfully")}catch(s){console.error("✗ Failed to import SVG as image:",s),r.fills=[{fillColor:"#FFFFFF",fillOpacity:.1}],r.strokes=[{strokeColor:"#22D3EE",strokeWidth:1,strokeOpacity:.3}]}else console.log("No SVG data available for:",t.id),r.fills=[{fillColor:"#FFFFFF",fillOpacity:.1}],r.strokes=[{strokeColor:"#22D3EE",strokeWidth:1,strokeOpacity:.3}];return{element:r,isText:!1,zIndex:o}}}if(t.text&&t.text.trim().length>0){const r=penpot.createText(t.text);if(r){r.x=t.geometry.x,r.y=t.geometry.y,r.resize(t.geometry.width,t.geometry.height),r.name=p(t);const s=parseInt(t.styles.fontSize);!isNaN(s)&&s>0&&(r.fontSize=s.toString());try{r.fontFamily=I(t.styles.fontFamily)}catch{r.fontFamily="Work Sans"}if(t.styles.fontWeight)try{r.fontWeight=W(t.styles.fontWeight)}catch{r.fontWeight="400"}try{const n=h(t.styles.color);n&&n!=="rgba(0, 0, 0, 0)"?r.fills=[{fillColor:n,fillOpacity:1}]:r.fills=[{fillColor:"#FFFFFF",fillOpacity:1}]}catch{r.fills=[{fillColor:"#FFFFFF",fillOpacity:1}]}return{element:r,isText:!0,zIndex:o}}return null}const e=penpot.createRectangle();if(e){if(e.x=t.geometry.x,e.y=t.geometry.y,e.resize(t.geometry.width,t.geometry.height),e.name=p(t),t.styles.backgroundImage&&(t.styles.backgroundImage.includes("gradient")||t.styles.backgroundImage.includes("-gradient"))){console.log("Found gradient element:",t.id),console.log("Background image:",t.styles.backgroundImage);const r=E(t.styles.backgroundImage);if(r){console.log("Parsed gradient:",r);try{return e.fills=[{fillColorGradient:r}],console.log("✓ Gradient applied successfully"),{element:e,isText:!1,zIndex:o}}catch(s){console.error("✗ Gradient fill failed:",s)}}else console.warn("Failed to parse gradient")}if(t.styles.backgroundColor&&t.styles.backgroundColor!=="rgba(0, 0, 0, 0)"){const r=h(t.styles.backgroundColor),s=parseFloat(t.styles.opacity)||1;e.fills=[{fillColor:r,fillOpacity:s}]}if(t.styles.borderRadius&&t.styles.borderRadius!=="0px"){const r=parseInt(t.styles.borderRadius);!isNaN(r)&&r>0&&(e.borderRadius=r)}return{element:e,isText:!1,zIndex:o}}return null}function k(t){if(!penpot.currentPage)throw new Error("No active page found");const e=F(t),r=S(e),s=penpot.createBoard();if(!s)throw new Error("Failed to create board");s.name=t.metadata.title||"Imported Website",s.resize(r.width,r.height),s.x=0,s.y=0;const n=[],u=50;for(let a=0;a<e.length;a+=u)e.slice(a,a+u).forEach(c=>{const g=z(c);g&&n.push(g)});n.sort((a,l)=>a.isText!==l.isText?a.isText?1:-1:a.zIndex-l.zIndex),n.forEach(a=>s.appendChild(a.element)),penpot.selection=[s]}
